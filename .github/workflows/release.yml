name: Release
on:
  workflow_dispatch:
    inputs:
      commitType:
        description: "Commit Type"
        required: true
        default: "refactor"
        type: choice
        options:
          - feat
          - fix
          - refactor
      commitMessage:
        description: "Commit Message"
        required: true
        default: "update icons"
        type: string

permissions:
  contents: write
  id-token: write # Required for OIDC

jobs:
  publish:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          cache: "yarn"
          node-version-file: ".nvmrc"
          scope: sbb-esta
      - name: "Yarn: Install dependencies"
        run: yarn install --frozen-lockfile --non-interactive

      - name: "Release: Set git user"
        run: |
          git config --global user.name 'github-actions'
          git config --global user.email 'github-actions@github.com'

      - name: Extract icons
        run: yarn extract
        env:
          FIGMA_FILE_ID: ${{ secrets.FIGMA_FILE_ID }}
          FIGMA_TOKEN: ${{ secrets.FIGMA_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Commit changes
        run: |
          git add --all
          git commit -m "${{ inputs.commitType }}: ${{ inputs.commitMessage }}\n\nActor: ${{ github.actor }}"

      - name: "Release: Create release with commit-and-tag-version"
        run: yarn commit-and-tag-version

      - name: "Release: Push release to repository"
        run: git push --follow-tags origin main

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: eu-central-1
      - name: Upload icons and indexes to s3
        run: aws s3 cp . s3://cloudfront-icon-cdn-backend-esta-web-prod --recursive --exclude "*" --include "icons/*.svg" --include "icons/index.json"

      - name: Dispatch digital.sbb.ch build
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            await github.rest.repos.createDispatchEvent({
                owner: context.repo.owner,
                repo: 'digital.sbb.ch',
                event_type: 'build-and-deploy',
            })
